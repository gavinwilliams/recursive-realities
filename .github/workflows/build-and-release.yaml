name: Build & Release eBooks

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Convert Markdown to PDF, EPUB & HTML
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create build directory
        run: mkdir -p build

      - name: Convert Markdown files using pandoc/latex Docker image
        run: |
          docker run --rm \
            -v "${{ github.workspace }}/src:/data" \
            -v "${{ github.workspace }}/build:/data/build" \
            pandoc/latex:latest-ubuntu \
            /bin/sh -c "cd /data && for f in *.md; do \
                           b=$(basename \"$f\" .md); \
                           echo \"Converting $f...\"; \
                           pandoc \"$f\" -o \"build/${b}.pdf\" --pdf-engine=xelatex && \
                           pandoc \"$f\" -o \"build/${b}.epub\" && \
                           pandoc \"$f\" -o \"build/${b}.html\" --standalone --metadata title=\"${b}\"; \
                         done"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ebooks
          path: build/

  release:
    name: Create or Update GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create or update release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: "Automated Release ${{ github.ref_name }}"
          body: "Auto-generated release of converted eBooks."
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ebooks
          path: build/

      - name: Upload eBooks to release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}