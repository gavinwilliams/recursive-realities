name: Build & Release eBooks

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    name: Convert Markdown to PDF, EPUB & HTML
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create build directory
        run: mkdir -p build

      - name: Convert Markdown files using pandoc/latex Docker image (with logs)
        run: |
          docker run --rm -i \
            -v "${{ github.workspace }}/src:/data" \
            -v "${{ github.workspace }}/build:/data/build" \
            -e LANG=C.UTF-8 \
            pandoc/latex:latest-ubuntu \
            /bin/sh -c '
              cd /data
              echo "üü¢ Starting Pandoc conversions..."
              for f in *.md; do
                if [ ! -f "$f" ]; then
                  echo "‚ö†Ô∏è No markdown files found in /src."
                  exit 0
                fi
                b=$(basename "$f" .md)
                echo "‚öôÔ∏è Converting $f ‚Üí PDF, EPUB, HTML..."
                pandoc "$f" -f markdown -t pdf -o "build/${b}.pdf" --pdf-engine=xelatex --verbose 2>&1
                echo "‚úÖ PDF done for $b"
                pandoc "$f" -f markdown -t epub -o "build/${b}.epub" --verbose 2>&1
                echo "‚úÖ EPUB done for $b"
                pandoc "$f" -f markdown -t html -o "build/${b}.html" --standalone --metadata title="${b}" --verbose 2>&1
                echo "‚úÖ HTML done for $b"
              done
              echo "üèÅ All conversions completed."
            '

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ebooks
          path: build/

  release:
    name: Create or Update GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Create or update release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: "Automated Release ${{ github.ref_name }}"
          body: "Auto-generated release of converted eBooks."
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ebooks
          path: build/

      - name: Upload eBooks to release
        uses: softprops/action-gh-release@v2
        with:
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}